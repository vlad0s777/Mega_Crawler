<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mega.Web.Api</name>
    </assembly>
    <members>
        <member name="T:Mega.Web.Api.Controllers.AdminController">
            <summary>
            Управляющий контроллер
            </summary>
            <remarks>
            В данном контроллере можно запустить процесс краулинга
            </remarks>
        </member>
        <member name="M:Mega.Web.Api.Controllers.AdminController.#ctor(Mega.Messaging.IMessageBroker{Mega.Services.UriRequest.UriRequest},Mega.Domain.ISomeReportDataProvider)">
            <param name="broker">Брокер сообщений</param>
            <param name="someReportDataProvider">Контекст данных</param>
        </member>
        <member name="M:Mega.Web.Api.Controllers.AdminController.StartCrawler">
            <summary>
            Запуск краулера
            </summary>
            <remarks>
            Брокеру отправляется пустое сообщение, которое инициирует процесс краулинга
            </remarks>
            <returns>
            Результат запуска краулинга
            </returns>
        </member>
        <member name="M:Mega.Web.Api.Controllers.AdminController.StartMigration">
            <summary>
            Запуск миграции базы данных
            </summary>
            <remarks>
            В начале он через Dapper запрашивает всё содержимое таблицы миграций; 
            Если таблицы нет — создаёт её прямым SQL-запросом через имеющийся DbConnection;
            Получает список файлов из каталога миграций, упорядочивает его по алфавиту(и как следствие, по времени);
            По порядку пытается выполнять содержимое тех файлов-запросов, которых ещё не было в таблице миграций;
            На каждую успешно выполненную миграцию записывает соответствующую строку в таблицу миграций;
            </remarks>
            <returns>
            Результат запуска миграции
            </returns>
        </member>
        <member name="M:Mega.Web.Api.Controllers.AdminController.DeleteTag(System.Int32)">
            <summary>
            Удаление одного тега
            </summary>
            <remarks>
            Добавляем тег в блеклист (таблица TagsDelete)
            </remarks>
            <returns>
            Результат  удаления
            </returns>
            <param name="id">Идентификатор тега</param>
        </member>
        <member name="M:Mega.Web.Api.Controllers.AdminController.DeleteTags(System.Collections.Generic.List{System.Int32})">
            <summary>
            Удаление списка тегов
            </summary>
            <remarks>
            Добавляем теги в блеклист (таблица TagsDelete)
            </remarks>
            <returns>
            Результат  удаления
            </returns>
            <param name="ids">Список идентификаторов тегов</param>
        </member>
        <member name="T:Mega.Web.Api.Controllers.ArticlesController">
            <summary>
            Контроллер статей
            </summary>
            <remarks>
            В данном контроллере можно просмотреть скрауленные статьи, получить количество статей в опредеделенный промежуток времени
            </remarks>
        </member>
        <member name="M:Mega.Web.Api.Controllers.ArticlesController.#ctor(Mega.Domain.ISomeReportDataProvider,Mega.Web.Api.Mappers.IMapper{Mega.Domain.Article,Mega.Web.Api.Models.ArticleModel})">
            <param name="someReportDataProvider">Контекст данных</param>
            <param name="articleMapper">Конвертер домена статьи в модель статьи</param>
        </member>
        <member name="M:Mega.Web.Api.Controllers.ArticlesController.GetPage(System.Int32)">
            <summary>
            Получение списка статей
            </summary>
            <returns>
            Модели статей
            </returns>
            <exception cref="T:Mega.Web.Api.Exceptions.HttpResponseException">Возникает если страница не найдена
            </exception>
            <param name="numPage">Номер страницы</param>
        </member>
        <member name="M:Mega.Web.Api.Controllers.ArticlesController.GetArticle(System.Int32)">
            <summary>
            Получение одной статьи по идентификатору
            </summary>
            <returns>
            Модель статьи
            </returns>
            <exception cref="T:Mega.Web.Api.Exceptions.HttpResponseException">Возникает если статья не найдена
            </exception>
            <param name="id">Идентификатор статьи</param>
        </member>
        <member name="M:Mega.Web.Api.Controllers.ArticlesController.CountArticles(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Получение количества статей в определенный промежуток времени
            </summary>
            <returns>
            Количество статей
            </returns>
            <param name="startDate">Начальная дата, необязательная, если без неё, то будет подсчитано количество всех статей</param>
            <param name="endDate">Конечная дата, необяательная, если без неё, то будет подсчитано количество статей от начальной даты до последней статьи</param>
        </member>
        <member name="T:Mega.Web.Api.Controllers.TagsController">
            <summary>
            Контроллер тегов
            </summary>
            <remarks>
            В данном контроллере можно получить тэги, статьи у определенных тегов, количество статей у определенного тега в опредеделенный промежуток времени,
            получить определенное количество популярных тегов
            </remarks>
        </member>
        <member name="M:Mega.Web.Api.Controllers.TagsController.#ctor(Mega.Domain.ISomeReportDataProvider,Mega.Web.Api.Mappers.IMapper{Mega.Domain.Tag,Mega.Web.Api.Models.TagModel},Mega.Web.Api.Mappers.IMapper{Mega.Domain.Article,Mega.Web.Api.Models.ArticleModel})">
            <param name="someReportDataProvider">Контекст данных</param>
            <param name="articleMapper">Конвертер домена статьи в модель статьи</param>
            <param name="tagMapper">Конвертер домена тега в модель тега</param>
        </member>
        <member name="M:Mega.Web.Api.Controllers.TagsController.GetPage(System.Int32)">
            <summary>
            Получение списка тегов
            </summary>
            <returns>
            Модели тегов
            </returns>
            <exception cref="T:Mega.Web.Api.Exceptions.HttpResponseException">Возникает если страница не найдена
            </exception>
            <param name="numPage">Номер страницы</param>
        </member>
        <member name="M:Mega.Web.Api.Controllers.TagsController.GetTag(System.Int32)">
            <summary>
            Получение одного тега по идентификатору
            </summary>
            <returns>
            Модель тега
            </returns>
            <exception cref="T:Mega.Web.Api.Exceptions.HttpResponseException">Возникает если тег не найден
            </exception>
            <param name="id">Идентификатор тега</param>
        </member>
        <member name="M:Mega.Web.Api.Controllers.TagsController.GetArticles(System.Int32,System.Int32)">
            <summary>
            Получение списка статей у определенного тега
            </summary>
            <returns>
            Модели статей
            </returns>
            <exception cref="T:Mega.Web.Api.Exceptions.HttpResponseException">Возникает если страница не найдена
            </exception>
            <param name="numPage">Номер страницы</param>
            <param name="id">Идентификатор тега</param>
        </member>
        <member name="M:Mega.Web.Api.Controllers.TagsController.CountArticles(System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Получение количества статей в определенный промежуток времени у определенного тега
            </summary>
            <returns>
            Количество статей
            </returns>
            <param name="startDate">Начальная дата, необязательная, если без неё, то будет подсчитано количество всех статей</param>
            <param name="endDate">Конечная дата, необяательная, если без неё, то будет подсчитано количество статей от начальной даты до последней статьи</param>
            <param name="id">Идентификатор тега</param>
        </member>
        <member name="M:Mega.Web.Api.Controllers.TagsController.GetPopularTags(System.Int32)">
            <summary>
            Получение определенного количества самых популярных тегов
            </summary>
            <returns>
            Модели статей
            </returns>
            <param name="count">Количество возвращаемых самых популярных тегов</param>
        </member>
        <member name="T:Mega.Web.Api.Models.ArticleModel">
            <summary>
            Модель статьи
            </summary>
        </member>
        <member name="P:Mega.Web.Api.Models.ArticleModel.ArticleId">
            <value>
            ID статьи
            </value>
        </member>
        <member name="P:Mega.Web.Api.Models.ArticleModel.DateCreate">
            <value>
            Дата создания статьи
            </value>
        </member>
        <member name="P:Mega.Web.Api.Models.ArticleModel.Text">
            <value>
            Текст статьи
            </value>
        </member>
        <member name="P:Mega.Web.Api.Models.ArticleModel.Head">
            <value>
            Заголовок статьи
            </value>
        </member>
        <member name="P:Mega.Web.Api.Models.ArticleModel.OuterArticleId">
            <value>
            Идентификатор статьи с сайта
            </value>
        </member>
        <member name="P:Mega.Web.Api.Models.ArticleModel.Tags">
            <value>
            Теги статьи
            </value>
        </member>
        <member name="P:Mega.Web.Api.Models.ArticleModel.TagsCount">
            <value>
            Идентификатор статьи с сайта
            </value>
        </member>
        <member name="T:Mega.Web.Api.Models.TagModel">
            <summary>
            Модель тега
            </summary>
        </member>
        <member name="P:Mega.Web.Api.Models.TagModel.TagId">
            <value>
            ID тега
            </value>
        </member>
        <member name="P:Mega.Web.Api.Models.TagModel.TagKey">
            <value>
            строковый ключ статьи с сайта
            </value>
        </member>
        <member name="P:Mega.Web.Api.Models.TagModel.Name">
            <value>
            имя тега
            </value>
        </member>
        <member name="P:Mega.Web.Api.Models.TagModel.ArticlesCount">
            <value>
            количество статей с данным тегом
            </value>
        </member>
    </members>
</doc>
